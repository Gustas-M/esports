@page "/Championships/{champId:int}/Tournaments/{id:int}/Matches"
@using blazor_frontend.Models
@using static System.Net.WebRequestMethods
@using System.Net.Http.Json
@inject HttpClient Http

<PageTitle>Matches</PageTitle>

<h1 class="text-center mb-3">Matches</h1>

<a class="btn btn-primary mb-3" href="/Championships/@champId/Tournaments/@id/Matches/Create">New Match</a>

@if (matches == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Round number</th>
                <th>Match number in round</th>
                <th>First team</th>
                <th>Second team</th>
                <th>Winning team</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var match in matches)
            {
                <tr>
                    <td>@match.Id</td>
                    <td>@match.Round_Number</td>
                    <td>@match.Match_In_Round_Number</td>
                    <td>@match.FirstTeam?.Name</td>
                    <td>@match.SecondTeam?.Name</td>
                    <td>@match.WinningTeam?.Name</td>
                    <td style="white-space:nowrap">
                        <a class="btn btn-primary btn-sm" href="/Championships/@champId/Tournaments/@id/Matches/@match.Id/Edit">Edit</a>                        
                        <button class="btn btn-danger btn-sm" @onclick="() => OpenDeleteDialog(match)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@if (DeleteDialogOpen)
{
    <ModalDialog Title="Delete" Text="Are you want to delete this item?" OnClose="@OnDeleteDialogClose"></ModalDialog>
}


@code {
    [Parameter]
    public int champId { get; set; }
    [Parameter]
    public int id { get; set; }
    private List<Match>? matches = new List<Match>();

    private bool DeleteDialogOpen { get; set; }

    private Match? matchToDelete;

    protected override async Task OnInitializedAsync()
    {
        matches = await Http.GetFromJsonAsync<List<Match>>($"https://walrus-app-irwkx.ondigitalocean.app/Championships/{champId}/Tournaments/{id}/Matches");
    }

    private async void OnDeleteDialogClose(bool isDelete)
    {
        if (isDelete){
            await DeleteMatch(matchToDelete);
            matchToDelete = null;
            await OnInitializedAsync();
        }

        DeleteDialogOpen = false;
        StateHasChanged();
    }

    private void OpenDeleteDialog(Match match)
    {
        DeleteDialogOpen = true;      
        matchToDelete = match;
        StateHasChanged();
    }

    protected async Task DeleteMatch(Match match)
    {
        var token = await JS.InvokeAsync<string>("localStorage.getItem", "access_token");


        string tokenVal = TokenHelper.ConvertToken(token);
        // var respone = await Http.DeleteAsync($"https:localhost:7068/Championships/{championship.Id}");
        var request = new HttpRequestMessage(HttpMethod.Delete, $"https://localhost:7068/Championships/{champId}/Tournaments/{id}/Matches/{match.Id}");
        request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", tokenVal);

        var response = await Http.SendAsync(request);
    }
}